// src/utils/formatters/init.ts
import { User } from '../../database/models';

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
export function formatUserProfile(user: User): string {
  let profile = `üÜî **ID:** ${user.telegramId}\n`;
  profile += `üë®‚Äçüíº **${user.username ? `@${user.username}` : user.getDisplayName()}**\n`;
  profile += `üèÜ **–£—Ä–æ–≤–µ–Ω—å:** ${user.getLevelText()} ${user.getLevelEmoji()}\n\n`;
  
  profile += `üí∞ **–ë–∞–ª–∞–Ω—Å:** ${(user.balance || 0).toLocaleString()} GRAM\n`;
  if (user.frozenBalance && user.frozenBalance > 0) {
    profile += `‚ùÑÔ∏è **–ó–∞–º–æ—Ä–æ–∂–µ–Ω–æ:** ${user.frozenBalance.toLocaleString()} GRAM\n`;
  }
  
  profile += `\nüìä **–°–¢–ê–¢–ò–°–¢–ò–ö–ê:**\n`;
  profile += `‚îú –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: ${user.tasksCompleted || 0}\n`;
  profile += `‚îú –°–æ–∑–¥–∞–Ω–æ –∑–∞–¥–∞–Ω–∏–π: ${user.tasksCreated || 0}\n`;
  profile += `‚îú –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${user.referralsCount || 0}`;
  
  if (user.premiumReferralsCount && user.premiumReferralsCount > 0) {
    profile += ` (${user.premiumReferralsCount} Premium)`;
  }
  
  profile += `\n‚îî –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—Å–µ–≥–æ: ${(user.totalEarned || 0).toLocaleString()} GRAM`;
  
  return profile;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –ø–µ—Ä–∏–æ–¥
 */
export function formatUserStats(user: User, period: 'today' | 'week' | 'month'): string {
  const periodText = {
    'today': '–°–ï–ì–û–î–ù–Ø',
    'week': '–ó–ê –ù–ï–î–ï–õ–Æ', 
    'month': '–ó–ê –ú–ï–°–Ø–¶'
  };
  
  let stats = `üìä **–°–¢–ê–¢–ò–°–¢–ò–ö–ê ${periodText[period]}**\n\n`;
  
  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞—Å—á–µ—Ç—ã –∏–∑ –ë–î –∑–∞ –ø–µ—Ä–∏–æ–¥
  // –ü–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const earnedToday = period === 'today' ? Math.floor((user.totalEarned || 0) * 0.1) : 
                     period === 'week' ? Math.floor((user.totalEarned || 0) * 0.3) :
                     (user.totalEarned || 0);
  
  const tasksToday = period === 'today' ? Math.floor((user.tasksCompleted || 0) * 0.1) :
                    period === 'week' ? Math.floor((user.tasksCompleted || 0) * 0.3) :
                    (user.tasksCompleted || 0);
  
  stats += `üí∞ **–§–∏–Ω–∞–Ω—Å—ã:**\n`;
  stats += `‚îú –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ${earnedToday.toLocaleString()} GRAM\n`;
  stats += `‚îú –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: ${Math.floor(earnedToday * 0.3).toLocaleString()} GRAM\n`;
  stats += `‚îî –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${(user.balance || 0).toLocaleString()} GRAM\n\n`;
  
  stats += `üìã **–ó–∞–¥–∞–Ω–∏—è:**\n`;
  stats += `‚îú –í—ã–ø–æ–ª–Ω–µ–Ω–æ: ${tasksToday}\n`;
  stats += `‚îú –°–æ–∑–¥–∞–Ω–æ: ${Math.floor(tasksToday * 0.2)}\n`;
  stats += `‚îî –í –ø—Ä–æ—Ü–µ—Å—Å–µ: ${Math.floor(tasksToday * 0.1)}\n\n`;
  
  stats += `üîó **–†–µ—Ñ–µ—Ä–∞–ª—ã:**\n`;
  const referralsForPeriod = period === 'today' ? Math.floor((user.referralsCount || 0) * 0.05) :
                            period === 'week' ? Math.floor((user.referralsCount || 0) * 0.2) :
                            (user.referralsCount || 0);
  
  stats += `‚îú –ù–æ–≤—ã—Ö: ${referralsForPeriod}\n`;
  stats += `‚îú –í—Å–µ–≥–æ: ${user.referralsCount || 0}\n`;
  stats += `‚îî –î–æ—Ö–æ–¥ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${Math.floor(earnedToday * 0.15).toLocaleString()} GRAM`;
  
  return stats;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export function formatBalance(balance: number, includeEmoji: boolean = true): string {
  const emoji = includeEmoji ? 'üí∞ ' : '';
  return `${emoji}${balance.toLocaleString()} GRAM`;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥
 */
export function formatTimeRemaining(endDate: Date): string {
  const now = new Date();
  const diff = endDate.getTime() - now.getTime();
  
  if (diff <= 0) {
    return '–ò—Å—Ç–µ–∫–ª–æ';
  }
  
  const days = Math.floor(diff / (1000 * 60 * 60 * 24));
  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
  
  if (days > 0) {
    return `${days}–¥ ${hours}—á`;
  } else if (hours > 0) {
    return `${hours}—á ${minutes}–º`;
  } else {
    return `${minutes}–º`;
  }
}

export function formatNotification(
  type: string,
  title: string,
  message: string,
  data?: any
): string {
  switch (type) {
    case 'task_completed':
      return `‚úÖ *${title}*\n${message}\n–ù–∞–≥—Ä–∞–¥–∞: ${data?.reward ?? ''} GRAM`;
    case 'referral_joined':
      return `üë• *${title}*\n${message}\n–ë–æ–Ω—É—Å: ${data?.bonus ?? ''} GRAM`;
    case 'balance_low':
      return `‚ö†Ô∏è *${title}*\n${message}`;
    case 'level_up':
      return `üèÜ *${title}*\n${message}`;
    case 'check_received':
      return `üí∏ *${title}*\n${message}\n–ö–æ–¥ —á–µ–∫–∞: \`${data?.checkCode ?? ''}\``;
    case 'system':
      return `üì¢ *${title}*\n${message}`;
    default:
      return `üì© *${title}*\n${message}`;
  }
}