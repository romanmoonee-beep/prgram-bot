// src/bot/handlers/depositHandler.ts - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –ü–û–ü–û–õ–ù–ï–ù–ò–Ø
import { Bot } from 'grammy';
import { requireAuth } from '../middlewares/auth';
import { logger } from '../../utils/logger';
import { EMOJIS } from '../../utils/constants';

export function setupDepositHandler(bot: Bot) {
  // –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
  bot.callbackQuery('cabinet_deposit', requireAuth, async (ctx) => {
    try {
      let message = `${EMOJIS.money} **–ü–û–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–ê**\n\n`;
      message += `–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:\n\n`;
      message += `${EMOJIS.info} **–ö—É—Ä—Å:** 1 Star = 10 GRAM\n`;
      message += `${EMOJIS.gift} **–ë–æ–Ω—É—Å—ã:**\n`;
      message += `‚Ä¢ –ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç 450 Stars: +10% –±–æ–Ω—É—Å\n`;
      message += `‚Ä¢ –ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç 850 Stars: +15% –±–æ–Ω—É—Å\n`;
      message += `‚Ä¢ –ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç 2000 Stars: +20% –±–æ–Ω—É—Å + 1000 GRAM\n\n`;
      message += `${EMOJIS.diamond} –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Stars –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤.`;

      const keyboard = {
        inline_keyboard: [
          [
            { text: 'üí≥ 100 Stars = 1,000 GRAM', callback_data: 'deposit_100' },
            { text: 'üíé 450 Stars = 4,950 GRAM', callback_data: 'deposit_450' }
          ],
          [
            { text: 'üî• 850 Stars = 9,775 GRAM', callback_data: 'deposit_850' },
            { text: '‚≠ê 2000 Stars = 25,000 GRAM', callback_data: 'deposit_2000' }
          ],
          [
            { text: `${EMOJIS.info} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Stars`, callback_data: 'deposit_info' }
          ],
          [
            { text: `${EMOJIS.back} –ù–∞–∑–∞–¥ –≤ –∫–∞–±–∏–Ω–µ—Ç`, callback_data: 'cabinet' }
          ]
        ]
      };

      await ctx.editMessageText(message, {
        reply_markup: keyboard,
        parse_mode: 'Markdown'
      });

      await ctx.answerCallbackQuery();
    } catch (error) {
      logger.error('Cabinet deposit error:', error);
      await ctx.answerCallbackQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
    }
  });

  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Stars
  bot.callbackQuery('deposit_info', requireAuth, async (ctx) => {
    try {
      let message = `‚≠ê **–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û TELEGRAM STARS**\n\n`;
      message += `**–ß—Ç–æ —Ç–∞–∫–æ–µ Telegram Stars?**\n`;
      message += `Telegram Stars - —ç—Ç–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≤–∞–ª—é—Ç–∞ Telegram, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –ø—Ä—è–º–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.\n\n`;
      
      message += `**–ö–∞–∫ –∫—É–ø–∏—Ç—å Stars?**\n`;
      message += `1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\n`;
      message += `2. –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –≤ Telegram\n`;
      message += `3. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–ª–∞—Ç–µ–∂\n`;
      message += `4. GRAM –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—á–∏—Å–ª—è—Ç—Å—è –Ω–∞ –±–∞–ª–∞–Ω—Å\n\n`;
      
      message += `**–ö—É—Ä—Å –æ–±–º–µ–Ω–∞:**\n`;
      message += `‚Ä¢ 1 Star = 10 GRAM\n\n`;
      
      message += `**–ë–æ–Ω—É—Å—ã –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏:**\n`;
      message += `‚Ä¢ 450+ Stars: +10% –±–æ–Ω—É—Å\n`;
      message += `‚Ä¢ 850+ Stars: +15% –±–æ–Ω—É—Å\n`;
      message += `‚Ä¢ 2000+ Stars: +20% –±–æ–Ω—É—Å + 1000 GRAM\n\n`;
      
      message += `**–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:**\n`;
      message += `‚úÖ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ\n`;
      message += `‚úÖ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ Telegram\n`;
      message += `‚úÖ –ù–∏–∫–∞–∫–∏—Ö –∫–æ–º–∏—Å—Å–∏–π\n`;
      message += `‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã`;

      const keyboard = {
        inline_keyboard: [
          [
            { text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é', callback_data: 'cabinet_deposit' }
          ]
        ]
      };

      await ctx.editMessageText(message, {
        reply_markup: keyboard,
        parse_mode: 'Markdown'
      });

      await ctx.answerCallbackQuery();
    } catch (error) {
      logger.error('Deposit info error:', error);
      await ctx.answerCallbackQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
    }
  });

  logger.info('‚úÖ Deposit handler configured');
}