version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: prgram_postgres
    environment:
      POSTGRES_DB: prgram_bot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - prgram_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: prgram_redis
    command: redis-server --appendonly yes --replica-read-only no
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - prgram_network

  # Redis Commander (Optional - for Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: prgram_redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - prgram_network
    profiles:
      - debug

  # pgAdmin (Optional - for PostgreSQL GUI)
  pgadmin:
    image: dpage/pgadmin4
    container_name: prgram_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@prgram.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - prgram_network
    profiles:
      - debug

  # Bot Application (for production)
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prgram_bot
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: